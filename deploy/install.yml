---
- hosts: pibase
  remote_user: ubuntu
  vars_files:
    - vars.yml
    - vault.yml
  tasks:
    - name: Add another bin dir to system-wide $PATH.
      copy:
        dest: /etc/profile.d/custom-path.sh
        content: 'PATH=$PATH:/app/server'
      become: true

    # System dependencies
    - name: Create app user
      become: true
      user:
        name: pibase
        home: /app
        shell: /bin/bash
        group: pibase
        groups:
          - pibase

    - name: Create user
      user:
        name: "{{ item }}"
        shell: /bin/bash
        group: pibase
        groups:
          - sudo
          - pibase
      become: true
      with_items:
        - james
        - steven
    - name: Add key for user
      authorized_key:
        user: "{{ item.name }}"
        state: present
        key: https://github.com/{{ item.github }}.keys
      become: true
      with_items:
        - name: james
          github: jamesdabbs
        - name: steven
          github: stevenclontz
    # TODO: setup base git config for each user (needed for CLI commits)

    - name: Install packages
      become: true
      apt:
        name: "{{ item }}"
        state: latest
      with_items:
        - git
        - nginx
        - postgresql
        - python-setuptools

    - name: Install pip
      become: true
      easy_install:
        name: pip

    - name: Install python packages
      become: true
      pip:
        name: awscli
        state: latest

    - name: Create root app directories
      become: true
      file:
        path: "{{ item }}"
        state: directory
        owner: pibase
      with_items:
        - /app
        - /app/data
        - /app/server
        - /app/viewer
        - /app/.aws

    - block:
        # Deploy
        - name: Configure AWS S3 access
          template:
            src: templates/s3.{{ item }}.j2
            dest: /app/.aws/{{ item }}
            owner: pibase
          with_items:
            - config
            - credentials

        # Data
        - name: Clone data repo
          command: |
            git clone --mirror https://github.com/pi-base/data /app/data/repo.git
            find /app/data/repo.git -type d | xargs chmod g+ws
            find /app/data/repo.git/refs -type f | xargs --no-run-if-empty chmod g+w
          args:
            creates: /app/data/repo.git

        - name: Configure branches
          template:
            src: templates/repo.config.j2
            dest: /app/data/repo.git/config
            owner: pibase

        # Server
        - name: Clone server support files
          command: aws s3 sync s3://pi-base/deploy/server/{{ item }} /app/server/{{ item }}
          args:
            creates: /app/server/{{ item }}
          with_items:
            - pibase
            - config
            - static

        - name: Configure environment file
          template:
            src: templates/server.env.j2
            dest: /app/server/.env
            owner: pibase

        # Viewer
        - name: Clone viewer files
          command: aws s3 sync s3://pi-base/deploy/viewer /app/viewer
          become: true
          become_user: pibase
          args:
            creates: /app/viewer/index.html
      become: true
      become_user: pibase

    # Service configuration
    - name: Configure service
      become: yes
      copy:
        src: templates/pibase.service
        dest: /etc/systemd/system/pibase.service

    - name: Configure nginx sites
      become: yes
      copy:
        src: templates/{{ item }}.site
        dest: /etc/nginx/sites-available/{{ item }}.site
      with_items:
        - server
        - viewer

    - name: Copy maintenance page
      become: yes
      become_user: pibase
      copy:
        src: templates/maintenance.html
        dest: /app/maintenance.html

    - name: Link and enable nginx sites
      become: yes
      file:
        src: /etc/nginx/sites-available/{{ item }}.site
        dest: /etc/nginx/sites-enabled/{{ item }}.site
        state: link
      with_items:
        - server
        - viewer
